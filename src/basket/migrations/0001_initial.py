# Generated by Django 3.2.12 on 2023-11-05 23:41

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import src.basket.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, editable=False, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_datetime', models.DateTimeField(blank=True, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('total_price', models.PositiveIntegerField(blank=True, null=True)),
                ('total_offer_percent', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)])),
                ('total_price_with_offer', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.PositiveIntegerField(blank=True, choices=[(1, 'Created'), (2, 'Paid'), (3, 'Verified'), (4, 'Canceled')], default=1)),
            ],
            options={
                'verbose_name': 'Basket',
                'verbose_name_plural': 'Baskets',
            },
        ),
        migrations.CreateModel(
            name='BasketDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=128, null=True, unique=True)),
                ('count', models.PositiveSmallIntegerField()),
                ('payment_price', models.PositiveIntegerField(blank=True, null=True)),
                ('payment_offer_percent', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)])),
                ('payment_price_with_offer', models.PositiveIntegerField(blank=True, null=True)),
                ('total_price', models.PositiveIntegerField(blank=True, null=True)),
                ('total_price_with_offer', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Basket Detail',
                'verbose_name_plural': 'Basket Details',
            },
        ),
        migrations.CreateModel(
            name='ClosedBasket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, editable=False, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_datetime', models.DateTimeField(blank=True, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('total_price', models.PositiveIntegerField(blank=True, null=True)),
                ('total_offer_percent', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)])),
                ('total_price_with_offer', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.PositiveIntegerField(blank=True, choices=[(1, 'Created'), (2, 'Paid'), (3, 'Verified'), (4, 'Canceled')], default=1)),
            ],
            options={
                'verbose_name': 'ClosedBasket',
                'verbose_name_plural': 'ClosedBaskets',
            },
        ),
        migrations.CreateModel(
            name='ClosedBasketDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=128, null=True, unique=True)),
                ('count', models.PositiveSmallIntegerField()),
                ('payment_price', models.PositiveIntegerField(blank=True, null=True)),
                ('payment_offer_percent', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)])),
                ('payment_price_with_offer', models.PositiveIntegerField(blank=True, null=True)),
                ('total_price', models.PositiveIntegerField(blank=True, null=True)),
                ('total_price_with_offer', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.PositiveIntegerField(blank=True, choices=[(1, 'Created'), (2, 'Verified'), (3, 'Canceled')], default=1)),
            ],
            options={
                'verbose_name': 'Closed Basket Detail',
                'verbose_name_plural': 'Closed Basket Details',
            },
        ),
        migrations.CreateModel(
            name='ProductValidationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default=src.basket.models.generate_random_string, max_length=128, unique=True)),
                ('used', models.BooleanField(default=False)),
                ('closed_basket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='basket.closedbasket')),
            ],
            options={
                'verbose_name': 'Coupon Code',
                'verbose_name_plural': 'Coupon Codes',
            },
        ),
    ]
